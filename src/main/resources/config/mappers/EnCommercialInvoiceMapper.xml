<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EnCommercialInvoiceMapper">
  <resultMap id="BaseResultMap" type="com.aomei.model.EnCommercialInvoice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="TO_COMPANY" jdbcType="VARCHAR" property="toCompany" />
    <result column="Invoice_Number" jdbcType="VARCHAR" property="invoiceNumber" />
    <result column="FROM_COMPANY" jdbcType="VARCHAR" property="fromCompany" />
    <result column="RE_INFO" jdbcType="VARCHAR" property="reInfo" />
    <result column="DOC_Trade" jdbcType="DATE" property="docTrade" />
    <result column="seaport_from" jdbcType="VARCHAR" property="seaportFrom" />
    <result column="destination_to" jdbcType="VARCHAR" property="destinationTo" />
    <result column="payment" jdbcType="VARCHAR" property="payment" />
    <result column="payment_type" jdbcType="VARCHAR" property="paymentType" />
    <result column="issued_by" jdbcType="VARCHAR" property="issuedBy" />
    <result column="create_userId" jdbcType="INTEGER" property="createUserid" />
    <result column="shipment_Date" jdbcType="VARCHAR" property="shipmentDate" />
    <result column="relation_order_type" jdbcType="VARCHAR" property="relationOrderType" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <collection property="enciOrders" column="id" select="EnciOrderMapper.selectEnciOrdersByEnciId"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, TO_COMPANY, Invoice_Number, FROM_COMPANY, RE_INFO, DOC_Trade, seaport_from, destination_to, 
    payment, issued_by, create_userId,shipment_Date,payment_type,relation_order_type,order_no
  </sql>
  <sql id="doQueryParams">
      where 1=1
      <if test="toCompany != null">
          AND  TO_COMPANY=#{toCompany,jdbcType=VARCHAR}
      </if>
      <if test="invoiceNumber != null">
          AND  Invoice_Number=#{invoiceNumber,jdbcType=VARCHAR}
      </if>
      <if test="fromCompany != null">
          AND  FROM_COMPANY=#{fromCompany,jdbcType=VARCHAR}
      </if>
      <if test="relationOrderType != null">
          AND  relation_order_type=#{relationOrderType,jdbcType=VARCHAR}
      </if>
      <if test="orderNo != null">
          AND  order_No=#{orderNo,jdbcType=VARCHAR}
      </if>

      <if test="reInfo != null">
          AND  RE_INFO=#{reInfo,jdbcType=VARCHAR}
      </if>
      <if test="docTrade != null">
          AND  DOC_Trade=#{docTrade,jdbcType=DATE}
      </if>
      <if test="seaportFrom != null">
          AND  seaport_from=#{seaportFrom,jdbcType=VARCHAR}
      </if>
      <if test="destinationTo != null">
          AND  destination_to=#{destinationTo,jdbcType=VARCHAR}
      </if>
      <if test="payment != null">
          AND  payment=#{payment,jdbcType=VARCHAR}
      </if>
      <if test="issuedBy != null">
          AND  issued_by=#{issuedBy,jdbcType=VARCHAR}
      </if>
      <if test="createUserid != null">
          AND  create_userId=#{createUserid,jdbcType=INTEGER}
      </if>
      <if test="shipmentDate != null">
          AND  shipment_Date=#{shipmentDate,jdbcType=VARCHAR}
      </if>

  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_commercial_invoice_en
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectPages" resultMap="BaseResultMap" parameterType="java.util.Map" >
        select
        <include refid="Base_Column_List" />
        from t_commercial_invoice_en
        <include refid="doQueryParams"/>
        limit #{limitStart},#{limitEnd}
    </select>
    <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(0) from t_commercial_invoice_en
        <include refid="doQueryParams"/>
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_commercial_invoice_en
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByPrimaryKeyArray" parameterType="java.util.ArrayList">
        delete from t_commercial_invoice_en
        where id in
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
  <insert id="insert" parameterType="com.aomei.model.EnCommercialInvoice">
      <selectKey    keyProperty="id" resultType="int" order="AFTER">
          SELECT @@IDENTITY AS ID
      </selectKey>
      insert into t_commercial_invoice_en (TO_COMPANY, Invoice_Number,
      FROM_COMPANY, RE_INFO, DOC_Trade, 
      seaport_from, destination_to, payment,payment_type,
      issued_by, create_userId,shipment_Date,relation_order_type,order_no)
    values (#{toCompany,jdbcType=VARCHAR}, #{invoiceNumber,jdbcType=VARCHAR},
      #{fromCompany,jdbcType=VARCHAR}, #{reInfo,jdbcType=VARCHAR}, #{docTrade,jdbcType=DATE},
      #{seaportFrom,jdbcType=VARCHAR}, #{destinationTo,jdbcType=VARCHAR}, #{payment,jdbcType=VARCHAR},#{paymentType,jdbcType=VARCHAR},
      #{issuedBy,jdbcType=VARCHAR}, #{createUserid,jdbcType=INTEGER},#{shipmentDate,jdbcType=VARCHAR},#{relationOrderType,jdbcType=VARCHAR},#{orderNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aomei.model.EnCommercialInvoice">
      <selectKey    keyProperty="id" resultType="int" order="AFTER">
          SELECT @@IDENTITY AS ID
      </selectKey>
      insert into t_commercial_invoice_en
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="toCompany != null">
        TO_COMPANY,
      </if>
      <if test="invoiceNumber != null">
        Invoice_Number,
      </if>
      <if test="fromCompany != null">
        FROM_COMPANY,
      </if>
      <if test="reInfo != null">
        RE_INFO,
      </if>
      <if test="docTrade != null">
        DOC_Trade,
      </if>
      <if test="seaportFrom != null">
        seaport_from,
      </if>
      <if test="destinationTo != null">
        destination_to,
      </if>
      <if test="payment != null">
        payment,
      </if>
        <if test="paymentType != null">
            payment_type,
        </if>
      <if test="issuedBy != null">
        issued_by,
      </if>
      <if test="createUserid != null">
        create_userId,
      </if>
      <if test="shipmentDate !=null">
          shipment_Date,
      </if>
      <if test="relationOrderType !=null">
          relation_order_type,
      </if>
        <if test="orderNo != null">
            order_No,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="toCompany != null">
        #{toCompany,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNumber != null">
        #{invoiceNumber,jdbcType=VARCHAR},
      </if>
      <if test="fromCompany != null">
        #{fromCompany,jdbcType=VARCHAR},
      </if>
      <if test="reInfo != null">
        #{reInfo,jdbcType=VARCHAR},
      </if>
      <if test="docTrade != null">
        #{docTrade,jdbcType=DATE},
      </if>
      <if test="seaportFrom != null">
        #{seaportFrom,jdbcType=VARCHAR},
      </if>
      <if test="destinationTo != null">
        #{destinationTo,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=VARCHAR},
      </if>
        <if test="paymentType != null">
            #{paymentType,jdbcType=VARCHAR},
        </if>
      <if test="issuedBy != null">
        #{issuedBy,jdbcType=VARCHAR},
      </if>
      <if test="createUserid != null">
        #{createUserid,jdbcType=INTEGER},
      </if>
    <if test="shipmentDate !=null">
        #{shipmentDate,jdbcType=VARCHAR},
    </if>
        <if test="relationOrderType !=null">
            #{relationOrderType,jdbcType=VARCHAR},
        </if>
        <if test="orderNo != null">
            #{orderNo,jdbcType=VARCHAR},
        </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aomei.model.EnCommercialInvoice">
    update t_commercial_invoice_en
    <set>
      <if test="toCompany != null">
        TO_COMPANY = #{toCompany,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNumber != null">
        Invoice_Number = #{invoiceNumber,jdbcType=VARCHAR},
      </if>
      <if test="fromCompany != null">
        FROM_COMPANY = #{fromCompany,jdbcType=VARCHAR},
      </if>
      <if test="reInfo != null">
        RE_INFO = #{reInfo,jdbcType=VARCHAR},
      </if>
      <if test="docTrade != null">
        DOC_Trade = #{docTrade,jdbcType=DATE},
      </if>
      <if test="seaportFrom != null">
        seaport_from = #{seaportFrom,jdbcType=VARCHAR},
      </if>
      <if test="destinationTo != null">
        destination_to = #{destinationTo,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=VARCHAR},
      </if>
        <if test="paymentType != null">
            payment_type = #{paymentType,jdbcType=VARCHAR},
        </if>
      <if test="issuedBy != null">
        issued_by = #{issuedBy,jdbcType=VARCHAR},
      </if>
      <if test="createUserid != null">
        create_userId = #{createUserid,jdbcType=INTEGER},
      </if>
        <if test="shipmentDate !=null">
            shipment_Date=#{shipmentDate,jdbcType=VARCHAR},
        </if>
        <if test="relationOrderType !=null">
            relation_order_type=#{relationOrderType,jdbcType=VARCHAR},
        </if>
        <if test="orderNo != null">
            order_No=#{orderNo,jdbcType=VARCHAR},
        </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aomei.model.EnCommercialInvoice">
    update t_commercial_invoice_en
    set TO_COMPANY = #{toCompany,jdbcType=VARCHAR},
      Invoice_Number = #{invoiceNumber,jdbcType=VARCHAR},
      FROM_COMPANY = #{fromCompany,jdbcType=VARCHAR},
      RE_INFO = #{reInfo,jdbcType=VARCHAR},
      DOC_Trade = #{docTrade,jdbcType=DATE},
      seaport_from = #{seaportFrom,jdbcType=VARCHAR},
      destination_to = #{destinationTo,jdbcType=VARCHAR},
      payment = #{payment,jdbcType=VARCHAR},
      payment_type = #{paymentType,jdbcType=VARCHAR},
      issued_by = #{issuedBy,jdbcType=VARCHAR},
      create_userId = #{createUserid,jdbcType=INTEGER},
      relation_order_type=#{relationOrderType,jdbcType=VARCHAR},
      order_No=#{orderNo,jdbcType=VARCHAR},
      shipment_Date=#{shipmentDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>